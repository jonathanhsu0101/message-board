{"remainingRequest":"/home/jonathan/Documents/GitHub/message-board/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jonathan/Documents/GitHub/message-board/client/src/views/Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/jonathan/Documents/GitHub/message-board/client/src/views/Home.vue","mtime":1555199493260},{"path":"/home/jonathan/Documents/GitHub/message-board/client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/jonathan/Documents/GitHub/message-board/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jonathan/Documents/GitHub/message-board/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jonathan/Documents/GitHub/message-board/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jonathan/Documents/GitHub/message-board/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhr {\n  border-top: 2px solid white;\n}\n\nimg {\n  max-width: 300px;\n  height: auto;\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"addMessage\" class=\"mb-3\">\n      <div v-if=\"error\" class=\"alert alert-dismissible alert-warning\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n        <h4 class=\"alert-heading\">Error!</h4>\n        <p class=\"mb-0\">{{error}}</p>\n      </div>\n      <div class=\"form-group mt-3 mb-3\">\n        <label for=\"username\">Username</label>\n        <input v-model=\"message.username\" type=\"text\" class=\"form-control\" id=\"username\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"subject\">Subject</label>\n        <input\n          v-model=\"message.subject\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"subject\"\n          placeholder=\"Enter a subject\"\n          required\n        >\n      </div>\n      <div class=\"form-group\">\n        <label for=\"message\">Message</label>\n        <textarea v-model=\"message.message\" class=\"form-control\" id=\"message\" rows=\"3\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"imageURL\">Image URL</label>\n        <input\n          v-model=\"message.imageURL\"\n          type=\"url\"\n          class=\"form-control\"\n          id=\"imageURL\"\n          placeholder=\"Enter an image URL\"\n        >\n      </div>\n      <button type=\"submit\" class=\"btn btn-secondary\">Add message</button>\n    </form>\n    <div class=\"list-unstyled\" v-for=\"message in reversedMessages\" :key=\"message._id\">\n      <li class=\"media\">\n        <img v-if=\"message.imageURL\" :src=\"message.imageURL\" class=\"mr-3\" :alt=\"message.subject\">\n        <div class=\"media-body\">\n          <h4 class=\"mt-0 mb-1\">{{message.username}}</h4>\n          <h5 class=\"mt-0 mb-1\">{{message.subject}}</h5>\n          {{message.message}}\n          <br>\n          <small>{{message.created}}</small>\n        </div>\n      </li>\n      <hr>\n    </div>\n  </div>\n</template>\n\n<script>\nconst API_URL = \"http://localhost:1234/messages\";\n\nexport default {\n  name: \"home\",\n  data: () => ({\n    error: \"\",\n    messages: [],\n    message: {\n      username: \"Anonymous\",\n      subject: \"\",\n      message: \"\",\n      imageURL: \"\"\n    }\n  }),\n  computed: {\n    reversedMessages() {\n      return this.messages.slice().reverse();\n    }\n  },\n  mounted() {\n    fetch(API_URL)\n      .then(response => response.json())\n      .then(result => {\n        this.messages = result;\n      });\n  },\n  methods: {\n    addMessage() {\n      console.log(this.message);\n      fetch(API_URL, {\n        method: \"POST\",\n        body: JSON.stringify(this.message),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      })\n        .then(response => response.json())\n        .then(result => {\n          if (result.details) {\n            // there was an error\n            const error = result.details\n              .map(detail => detail.message)\n              .join(\". \");\n            this.error = error;\n          } else {\n            this.error = '';\n            this.messages.push(result);\n          }\n        });\n    }\n  }\n};\n</script>\n\n<style>\nhr {\n  border-top: 2px solid white;\n}\n\nimg {\n  max-width: 300px;\n  height: auto;\n}\n</style>\n"]}]}